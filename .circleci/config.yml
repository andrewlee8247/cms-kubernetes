# CircleCI 2.1, Google SDK, and Orbs for CI/CD configuration file
#
# Check https://circleci.com/orbs/registry/?query=gcp for more details
#
version: 2.1
orbs:
  node: circleci/node@1.0.1
  gcp-gke: circleci/gcp-gke@1.0.4
  gcr: circleci/gcp-gcr@0.7.1
jobs:
  test:
    docker:
      - image: google/cloud-sdk
    working_directory: ~/cms-kubernetes
    steps:
      - checkout
      - run:
          name: Authorize Google SDK
          command: |
            echo $GCLOUD_SERVICE_KEY > ./GCLOUD_SERVICE_KEY.json | gcloud auth activate-service-account --key-file GCLOUD_SERVICE_KEY.json
            gcloud --quiet config set project $GOOGLE_PROJECT_ID
            gcloud --quiet config set compute/zone $GOOGLE_COMPUTE_ZONE
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v3-dependencies-{{ checksum "requirements.txt" }}
            # Fallback to using the latest cache if no exact match is found
            - v3-dependencies-
      - run:
          name: Install Dependencies
          command: |
            apt-get install python3-venv --yes
            python3 -m venv venv
            . venv/bin/activate
            pip3 install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v3-dependencies-{{ checksum "requirements.txt" }}
      # Run tests
      - run:
          name: Run Tests
          command: |
            . venv/bin/activate
            export GOOGLE_APPLICATION_CREDENTIALS='./GCLOUD_SERVICE_KEY.json'
            make test
      # Run lints
      - run:
          name: Run Lint
          command: |
            . venv/bin/activate
            make lint

  # Build and Push Docker Images to GCR
  Build-Push-Image-Docker-API:
    description: Build and push API image to GCR
    machine: true
    working_directory: ~/cms-kubernetes
    steps:
      - checkout
      - run:
          name: Copy Service Key to API Directory
          command: |
            echo $GCLOUD_SERVICE_KEY > ~/cms-kubernetes/app/api/healthcare-predictions-85c2b5783a5e.json
      - gcr/gcr-auth
      - gcr/build-image:
          image: healthcare-predictions-api
          path: ~/cms-kubernetes/app/api
          tag: "v.1.2" # Change version number when updating 
      - gcr/push-image:
          image: healthcare-predictions-api
          tag: "v.1.2" # Change version number when updating
  Build-Push-Image-Docker-Frontend:
    description: Build and push front-end image to GCR
    machine: true
    working_directory: ~/cms-kubernetes
    steps:
      - checkout
      - gcr/gcr-auth
      - gcr/build-image:
          image: healthcare-predictions-app
          path: ~/cms-kubernetes/app/frontend
          tag: "v.1.2" # Change version number when updating 
      - gcr/push-image:
          image: healthcare-predictions-app
          tag: "v.1.2" # Change version number when updating

  # Deploy containers to GKE
  deploy:
    description: Deploy API and front-end to GKE
    machine: true
    steps:
      - gcp-gke/install
      - gcp-gke/update-kubeconfig-with-credentials:
          cluster: healthcare-predictions-dev
          gcloud-service-key: GCLOUD_SERVICE_KEY
          google-compute-zone: GOOGLE_COMPUTE_ZONE
          google-project-id: GOOGLE_PROJECT_ID
          perform-login: true
      - run:
          name: Update API Deployment
          command: |
            echo 'Updating API Deployment'
      - gcp-gke/rollout-image:
          cluster: healthcare-predictions-dev
          container: healthcare-predictions-api
          deployment: healthcare-api
          image: gcr.io/healthcare-predictions/healthcare-predictions-api
          namespace: healthcare-app
          tag: v.1.2 # Change version number when updating 
      - run:
          name: Update Front-end Deployment
          command: |
            echo 'Updating Front-end Deployment'
      - gcp-gke/rollout-image:
          cluster: healthcare-predictions-dev
          container: healthcare-predictions-frontend
          deployment: healthcare-frontend
          image: gcr.io/healthcare-predictions/healthcare-predictions-app
          namespace: healthcare-app
          tag: v.1.2 # Change version number when updating

  # Load test deployment
  load-test:
    description: Run load test.
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/cms-kubernetes
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v4-dependencies-{{ checksum "requirements.txt" }}
            # Fallback to using the latest cache if no exact match is found
            - v4-dependencies-
      - run:
          name: Install Dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip3 install locust
      - save_cache:
          paths:
            - ./venv
          key: v4-dependencies-{{ checksum "requirements.txt" }}
      # Run load test
      - run:
          name: Run Load Test
          command: |
            . venv/bin/activate
            locust --host=http://34.102.187.98 --locustfile locustfile.py --no-web -c 10 -r 1 -t 1m  --print-stats

workflows:
  version: 2
  test_build_deploy:
    jobs:
      - test:
          filters:
            branches:
              only:
                - master
                - development
      - Build-Push-Image-Docker-API:
          requires:
            - test
          filters:
            branches:
              only:
                - development
      - Build-Push-Image-Docker-Frontend:
          requires:
            - test
          filters:
            branches:
              only:
                - development
      - deploy:
          requires:
            - Build-Push-Image-Docker-API
          filters:
            branches:
              only:
                - development
      - load-test:
          requires:
            - deploy
          filters:
            branches:
              only:
                - development
