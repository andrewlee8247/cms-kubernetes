# CircleCI 2.0 and Google SDK configuration file
#
# Check https://circleci.com/docs/2.0/google-auth/ for more details
#
version: 2.1
orbs:
  node: circleci/node@1.0.1
  gcp-gke: circleci/gcp-gke@1.0.4
  gcr: circleci/gcp-gcr@0.0.2
jobs:
  test:
    docker:
      - image: google/cloud-sdk
    
    working_directory: ~/cms-kubernetes
    
    steps:
      - checkout
      - run:
          name: Authorize Google SDK
          command: |
            echo $GCLOUD_SERVICE_KEY > ./GCLOUD_SERVICE_KEY.json | gcloud auth activate-service-account --key-file GCLOUD_SERVICE_KEY.json
            gcloud --quiet config set project $GOOGLE_PROJECT_ID
            gcloud --quiet config set compute/zone $GOOGLE_COMPUTE_ZONE

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v3-dependencies-{{ checksum "requirements.txt" }}
            # Fallback to using the latest cache if no exact match is found
            - v3-dependencies-

      - run:
          name: Install Dependencies
          command: |
            apt-get install python3-venv --yes
            python3 -m venv venv
            . venv/bin/activate
            pip3 install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v3-dependencies-{{ checksum "requirements.txt" }}

      # Run tests
      - run:
          name: Run Tests
          command: |
            . venv/bin/activate
            export GOOGLE_APPLICATION_CREDENTIALS='./GCLOUD_SERVICE_KEY.json'
            make test

      # Run lints
      - run:
          name: Run Lint
          command: |
            . venv/bin/activate
            make lint
  Build-Push-Image-Docker-API:
    description: Build and push API image to GCR
    machine: true
    working_directory: ~/cms-kubernetes
    steps:
      - checkout
      - gcr/gcr-auth
      - path: ~/cms-kubernetes/app/api
      - gcr/build-image:
          image: healthcare-predictions-api
          tag: "v.1.1"
      - gcr/push-image:
          image: healthcare-predictions-api
          tag: "v.1.1"
  #Build-Push-Image-Docker-Frontend:
    #description: Build and push front-end image to GCR
    #machine: true
    #working_directory: ~/cms-kubernetes
    #path: ~/cms-kubernetes/app/frontend
    #steps:
      #- checkout
      #- gcr/gcr-auth
      #- gcr/build-image:
          #image: healthcare-predictions-app
          #tag: "v.1.1"
      #- gcr/push-image:
          #image: healthcare-predictions-app
          #tag: "v.1.1"     
workflows:
  version: 2
  test_build_deploy:
    jobs:
      - test
      - Build-Push-Image-Docker-API:
          requires:
            - test
      #- Build-Push-Image-Docker-Frontend:
          #requires:
            #- test
